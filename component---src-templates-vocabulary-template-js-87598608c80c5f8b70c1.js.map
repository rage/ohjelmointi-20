{"version":3,"file":"component---src-templates-vocabulary-template-js-87598608c80c5f8b70c1.js","mappings":"yRAYA,MAAMA,EAAQC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAATJ,CAAS,MAEjBK,EAAiBL,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,qCAAAC,YAAA,gBAAVJ,CAAU,gEASlB,MAAMO,UAA2BC,EAAAA,UAG9CC,SACE,MAAM,KAAEC,GAASC,KAAKC,OAChB,YAAEC,EAAW,QAAEC,GAAYJ,EAAKK,KAChCC,EAAWN,EAAKM,SAASC,MAAMC,KAAKC,IAAO,IAADC,EAAAC,EAC9C,MAAMC,EAAY,QAATF,EAAGD,EAAEI,YAAI,IAAAH,OAAA,EAANA,EAAQP,YAEpB,OADAS,EAAIE,MAAc,QAATH,EAAGF,EAAEI,YAAI,IAAAF,OAAA,EAANA,EAAQI,gBACbH,CAAG,IAENI,GAAWC,EAAAA,EAAAA,KACXC,EAAY,IAAIC,IAAJ,CAAgB,CAChCC,cAAetB,EAAAA,cACfuB,WAAYL,IACXM,SAEGC,EAAWvB,EAAKK,KAAKmB,iBAAiBC,UAC1CzB,EAAKK,KAAKmB,iBAAiBE,YAAY,UACvC1B,EAAKK,KAAKmB,iBAAiBG,QAG7B,OACE7B,EAAAA,cAAC8B,EAAAA,EAAaC,SAAQ,CACpBC,MAAO,CACLC,IAAKzB,EACL0B,QAAS,CAAE7B,YAAaA,EAAaoB,SAAUA,KAGjDzB,EAAAA,cAACmC,EAAAA,EAAM,CAACC,MAAO/B,EAAY+B,QAC3BpC,EAAAA,cAACqC,EAAAA,GAAyB,KACxBrC,EAAAA,cAACsC,EAAAA,EAAM,KACLtC,EAAAA,cAACuC,EAAAA,SAAQ,KACPvC,EAAAA,cAACwC,EAAAA,EAAS,KACRxC,EAAAA,cAACH,EAAc,KACbG,EAAAA,cAACT,EAAK,KAAEc,EAAY+B,OACnBhB,EAAUd,QAQ3B,EA5CmBP,EACZ0C,YAAcX,EAAAA,C","sources":["webpack://ohjelmoinnin-mooc/./src/templates/VocabularyTemplate.js"],"sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport rehypeReact from \"rehype-react\"\nimport { Helmet } from \"react-helmet\"\nimport styled from \"styled-components\"\nimport Container from \"../components/Container\"\nimport getNamedPartials from \"../partials\"\nimport \"./remark.css\"\nimport PagesContext from \"../contexes/PagesContext\"\nimport { LoginStateContextProvider } from \"../contexes/LoginStateContext\"\nimport Layout from \"./Layout\"\n\nconst Title = styled.h1``\n\nconst ContentWrapper = styled.div`\n  margin-top: 1rem;\n  padding-bottom: 2rem;\n\n  p {\n    margin-bottom: 2rem;\n  }\n`\n\nexport default class VocabularyTemplate extends React.Component {\n  static contextType = PagesContext\n\n  render() {\n    const { data } = this.props\n    const { frontmatter, htmlAst } = data.page\n    const allPages = data.allPages.edges.map((o) => {\n      const res = o.node?.frontmatter\n      res.words = o.node?.vocabularyWords\n      return res\n    })\n    const partials = getNamedPartials()\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: partials,\n    }).Compiler\n\n    const filePath = data.page.fileAbsolutePath.substring(\n      data.page.fileAbsolutePath.lastIndexOf(\"/data/\"),\n      data.page.fileAbsolutePath.length,\n    )\n\n    return (\n      <PagesContext.Provider\n        value={{\n          all: allPages,\n          current: { frontmatter: frontmatter, filePath: filePath },\n        }}\n      >\n        <Helmet title={frontmatter.title} />\n        <LoginStateContextProvider>\n          <Layout>\n            <Fragment>\n              <Container>\n                <ContentWrapper>\n                  <Title>{frontmatter.title}</Title>\n                  {renderAst(htmlAst)}\n                </ContentWrapper>\n              </Container>\n            </Fragment>\n          </Layout>\n        </LoginStateContextProvider>\n      </PagesContext.Provider>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query ($path: String!) {\n    page: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      html\n      frontmatter {\n        path\n        title\n      }\n      fileAbsolutePath\n    }\n    allPages: allMarkdownRemark(\n      sort: { order: ASC, fields: frontmatter___path }\n      limit: 1000\n      filter: {\n        frontmatter: { hidden: { ne: true } }\n        vocabularyWords: { elemMatch: { name: { regex: \"/.+/\" } } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            path\n            title\n          }\n          vocabularyWords {\n            type\n            name\n            description\n            parentPagePath\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["Title","styled","h1","withConfig","displayName","componentId","ContentWrapper","div","VocabularyTemplate","React","render","data","this","props","frontmatter","htmlAst","page","allPages","edges","map","o","_o$node","_o$node2","res","node","words","vocabularyWords","partials","getNamedPartials","renderAst","rehypeReact","createElement","components","Compiler","filePath","fileAbsolutePath","substring","lastIndexOf","length","PagesContext","Provider","value","all","current","Helmet","title","LoginStateContextProvider","Layout","Fragment","Container","contextType"],"sourceRoot":""}