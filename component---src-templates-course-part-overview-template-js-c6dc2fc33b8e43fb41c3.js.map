{"version":3,"sources":["webpack:///./src/templates/CoursePartOverviewTemplate.js"],"names":["ContentWrapper","styled","div","Title","h1","CoursePartOverviewTemplate","componentDidMount","a","loggedIn","getCachedUserDetails","undefined","userInfo","extra_fields","research","navigate","render","data","this","props","page","frontmatter","htmlAst","allPages","edges","map","o","res","node","exercises","moocfiExercises","partials","getNamedPartials","renderAst","rehypeReact","createElement","React","components","Compiler","filePath","fileAbsolutePath","substring","lastIndexOf","length","Provider","value","all","current","title","Component","contextType","LoginStateContext"],"mappings":"yjBAoBA,IAAMA,EAAiBC,IAAOC,IAAV,iGAAGD,CAAH,gEASdE,EAAQF,IAAOG,GAAV,wFAAGH,CAAH,MAEUI,E,iLAGbC,kB,gCAAN,8BAAAC,EAAA,yDACOC,cADP,iEAKuBC,cALvB,YAOmBC,KADAC,OADbA,EALN,mBAMmBA,EAAUC,oBAN7B,aAMmB,EAAwBC,WAEvCC,mBAAS,iBARb,0C,sOAYAC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACR,EAAiCA,EAAKG,KAA9BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,QACfC,EAAWN,EAAKM,SAASC,MAAMC,KAAI,SAAAC,GAAM,IAAD,IACtCC,EAAG,UAAGD,EAAEE,YAAL,aAAG,EAAQP,YAEpB,OADAM,EAAIE,UAAJ,UAAgBH,EAAEE,YAAlB,aAAgB,EAAQE,gBACjBH,KAEHI,EAAWC,cACXC,EAAY,IAAIC,IAAY,CAChCC,cAAeC,IAAMD,cACrBE,WAAYN,IACXO,SAEGC,EAAWtB,EAAKG,KAAKoB,iBAAiBC,UAC1CxB,EAAKG,KAAKoB,iBAAiBE,YAAY,UACvCzB,EAAKG,KAAKoB,iBAAiBG,QAE7B,OACE,kBAAC,IAAaC,SAAd,CACEC,MAAO,CACLC,IAAKvB,EACLwB,QAAS,CAAE1B,YAAaA,EAAakB,SAAUA,KAGjD,kBAAC,SAAD,CAAQS,MAAO3B,EAAY2B,QAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC/C,EAAD,KACE,kBAACG,EAAD,KAAQiB,EAAY2B,OACnBf,EAAUX,U,GA/C2Bc,IAAMa,WAAzC3C,EACZ4C,YAAcC","file":"component---src-templates-course-part-overview-template-js-c6dc2fc33b8e43fb41c3.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport rehypeReact from \"rehype-react\"\nimport { navigate } from \"gatsby\"\nimport { Helmet } from \"react-helmet\"\n\nimport Layout from \"./Layout\"\n\nimport getNamedPartials from \"../partials\"\nimport { getCachedUserDetails } from \"../services/moocfi\"\nimport \"./remark.css\"\nimport PagesContext from \"../contexes/PagesContext\"\nimport LoginStateContext, {\n  LoginStateContextProvider,\n} from \"../contexes/LoginStateContext\"\nimport Container from \"../components/Container\"\n\nimport { loggedIn } from \"../services/moocfi\"\n\nconst ContentWrapper = styled.div`\n  margin-top: 1rem;\n  padding-bottom: 2rem;\n\n  p {\n    margin-bottom: 2rem;\n  }\n`\n\nconst Title = styled.h1``\n\nexport default class CoursePartOverviewTemplate extends React.Component {\n  static contextType = LoginStateContext\n\n  async componentDidMount() {\n    if (!loggedIn()) {\n      return\n    }\n\n    let userInfo = await getCachedUserDetails()\n    const research = userInfo?.extra_fields?.research\n    if (research === undefined) {\n      navigate(\"/missing-info\")\n    }\n  }\n\n  render() {\n    const { data } = this.props\n    const { frontmatter, htmlAst } = data.page\n    const allPages = data.allPages.edges.map(o => {\n      const res = o.node?.frontmatter\n      res.exercises = o.node?.moocfiExercises\n      return res\n    })\n    const partials = getNamedPartials()\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: partials,\n    }).Compiler\n\n    const filePath = data.page.fileAbsolutePath.substring(\n      data.page.fileAbsolutePath.lastIndexOf(\"/data/\"),\n      data.page.fileAbsolutePath.length,\n    )\n    return (\n      <PagesContext.Provider\n        value={{\n          all: allPages,\n          current: { frontmatter: frontmatter, filePath: filePath },\n        }}\n      >\n        <Helmet title={frontmatter.title} />\n        <LoginStateContextProvider>\n          <Layout>\n            <Fragment>\n              <Container>\n                <ContentWrapper>\n                  <Title>{frontmatter.title}</Title>\n                  {renderAst(htmlAst)}\n                </ContentWrapper>\n              </Container>\n            </Fragment>\n          </Layout>\n        </LoginStateContextProvider>\n      </PagesContext.Provider>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    page: markdownRemark(frontmatter: { path: { eq: $path } }) {\n      htmlAst\n      html\n      frontmatter {\n        path\n        title\n      }\n      fileAbsolutePath\n    }\n    allPages: allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            path\n            title\n          }\n          moocfiExercises {\n            id\n            type\n            parentPagePath\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}